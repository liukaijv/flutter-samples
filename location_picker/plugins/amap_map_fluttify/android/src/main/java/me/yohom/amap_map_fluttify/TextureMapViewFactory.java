//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

package me.yohom.amap_map_fluttify;

import android.content.Context;
import android.view.View;
import android.util.Log;
import android.app.Activity;

import com.amap.api.maps.AMapOptions;
import com.amap.api.maps.model.CameraPosition;
import com.amap.api.maps.model.LatLng;

import java.util.HashMap;
import java.util.Map;
import java.util.HashMap;

import io.flutter.plugin.common.BinaryMessenger;
import io.flutter.plugin.common.MethodChannel;
import io.flutter.plugin.common.PluginRegistry.Registrar;
import io.flutter.plugin.common.StandardMessageCodec;
import io.flutter.plugin.common.StandardMethodCodec;
import io.flutter.plugin.platform.PlatformView;
import io.flutter.plugin.platform.PlatformViewFactory;

import me.yohom.foundation_fluttify.core.FluttifyMessageCodec;

import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getHEAP;
import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getEnableLog;

@SuppressWarnings("ALL")
class TextureMapViewFactory extends PlatformViewFactory {

    TextureMapViewFactory(BinaryMessenger messenger, Activity activity) {
        super(StandardMessageCodec.INSTANCE);

        this.messenger = messenger;
        this.activity = activity;

        new MethodChannel(messenger, "me.yohom/amap_map_fluttify/com_amap_api_maps_TextureMapView", new StandardMethodCodec(new FluttifyMessageCodec())).setMethodCallHandler((methodCall, methodResult) -> {
            Map<String, Object> args = (Map<String, Object>) methodCall.arguments;
            AmapMapFluttifyPlugin.Handler handler = handlerMap.get(methodCall.method);
            if (handler != null) {
                try {
                    handler.call(args, methodResult);
                } catch (Exception e) {
                    e.printStackTrace();
                    methodResult.error(e.getMessage(), null, null);
                }
            } else {
                methodResult.notImplemented();
            }
        });
    }

    private BinaryMessenger messenger;
    private Activity activity;

    private final Map<String, AmapMapFluttifyPlugin.Handler> handlerMap = new HashMap<String, AmapMapFluttifyPlugin.Handler>() {{
        // method
        put("com.amap.api.maps.TextureMapView::getMap", (__args__, __methodResult__) -> {
            // args
        
        
            // ref
            com.amap.api.maps.TextureMapView __this__ = (com.amap.api.maps.TextureMapView) ((Map<String, Object>) __args__).get("__this__");
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.TextureMapView@" + __this__ + "::getMap(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.maps.AMap __result__ = null;
            try {
                __result__ = __this__.getMap();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                __methodResult__.error(throwable.getMessage(), null, null);
                return;
            }
        
            __methodResult__.success(__result__);
        });
        // method
        put("com.amap.api.maps.TextureMapView::onCreate", (__args__, __methodResult__) -> {
            // args
            // ref arg
            android.os.Bundle var1 = (android.os.Bundle) ((Map<String, Object>) __args__).get("var1");
        
            // ref
            com.amap.api.maps.TextureMapView __this__ = (com.amap.api.maps.TextureMapView) ((Map<String, Object>) __args__).get("__this__");
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.TextureMapView@" + __this__ + "::onCreate(" + var1 + ")");
            }
        
            // invoke native method
            Void __result__ = null;
            try {
                __this__.onCreate(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                __methodResult__.error(throwable.getMessage(), null, null);
                return;
            }
        
            __methodResult__.success(__result__);
        });
        // method
        put("com.amap.api.maps.TextureMapView::onResume", (__args__, __methodResult__) -> {
            // args
        
        
            // ref
            com.amap.api.maps.TextureMapView __this__ = (com.amap.api.maps.TextureMapView) ((Map<String, Object>) __args__).get("__this__");
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.TextureMapView@" + __this__ + "::onResume(" + "" + ")");
            }
        
            // invoke native method
            Void __result__ = null;
            try {
                __this__.onResume();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                __methodResult__.error(throwable.getMessage(), null, null);
                return;
            }
        
            __methodResult__.success(__result__);
        });
        // method
        put("com.amap.api.maps.TextureMapView::onPause", (__args__, __methodResult__) -> {
            // args
        
        
            // ref
            com.amap.api.maps.TextureMapView __this__ = (com.amap.api.maps.TextureMapView) ((Map<String, Object>) __args__).get("__this__");
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.TextureMapView@" + __this__ + "::onPause(" + "" + ")");
            }
        
            // invoke native method
            Void __result__ = null;
            try {
                __this__.onPause();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                __methodResult__.error(throwable.getMessage(), null, null);
                return;
            }
        
            __methodResult__.success(__result__);
        });
        // method
        put("com.amap.api.maps.TextureMapView::onDestroy", (__args__, __methodResult__) -> {
            // args
        
        
            // ref
            com.amap.api.maps.TextureMapView __this__ = (com.amap.api.maps.TextureMapView) ((Map<String, Object>) __args__).get("__this__");
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.TextureMapView@" + __this__ + "::onDestroy(" + "" + ")");
            }
        
            // invoke native method
            Void __result__ = null;
            try {
                __this__.onDestroy();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                __methodResult__.error(throwable.getMessage(), null, null);
                return;
            }
        
            __methodResult__.success(__result__);
        });
        // method
        put("com.amap.api.maps.TextureMapView::onLowMemory", (__args__, __methodResult__) -> {
            // args
        
        
            // ref
            com.amap.api.maps.TextureMapView __this__ = (com.amap.api.maps.TextureMapView) ((Map<String, Object>) __args__).get("__this__");
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.TextureMapView@" + __this__ + "::onLowMemory(" + "" + ")");
            }
        
            // invoke native method
            Void __result__ = null;
            try {
                __this__.onLowMemory();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                __methodResult__.error(throwable.getMessage(), null, null);
                return;
            }
        
            __methodResult__.success(__result__);
        });
        // method
        put("com.amap.api.maps.TextureMapView::onSaveInstanceState", (__args__, __methodResult__) -> {
            // args
            // ref arg
            android.os.Bundle var1 = (android.os.Bundle) ((Map<String, Object>) __args__).get("var1");
        
            // ref
            com.amap.api.maps.TextureMapView __this__ = (com.amap.api.maps.TextureMapView) ((Map<String, Object>) __args__).get("__this__");
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.TextureMapView@" + __this__ + "::onSaveInstanceState(" + var1 + ")");
            }
        
            // invoke native method
            Void __result__ = null;
            try {
                __this__.onSaveInstanceState(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                __methodResult__.error(throwable.getMessage(), null, null);
                return;
            }
        
            __methodResult__.success(__result__);
        });
        // method
        put("com.amap.api.maps.TextureMapView::setVisibility", (__args__, __methodResult__) -> {
            // args
            // ref arg
            Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
        
            // ref
            com.amap.api.maps.TextureMapView __this__ = (com.amap.api.maps.TextureMapView) ((Map<String, Object>) __args__).get("__this__");
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.TextureMapView@" + __this__ + "::setVisibility(" + var1 + ")");
            }
        
            // invoke native method
            Void __result__ = null;
            try {
                __this__.setVisibility(var1.intValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                __methodResult__.error(throwable.getMessage(), null, null);
                return;
            }
        
            __methodResult__.success(__result__);
        });
    }};

    @Override
    public PlatformView create(Context context, int id, Object params) {
        Map<String, Object> __args__ = (Map<String, Object>) params;

        ////////////////////////////////初始化AndroidView////////////////////////////////////////
        Integer mapType = (Integer) __args__.get("mapType");
        Boolean showZoomControl = (Boolean) __args__.get("showZoomControl");
        Boolean showCompass = (Boolean) __args__.get("showCompass");
        Boolean showScaleControl = (Boolean) __args__.get("showScaleControl");
        Boolean zoomGesturesEnabled = (Boolean) __args__.get("zoomGesturesEnabled");
        Boolean scrollGesturesEnabled = (Boolean) __args__.get("scrollGesturesEnabled");
        Boolean rotateGestureEnabled = (Boolean) __args__.get("rotateGestureEnabled");
        Boolean tiltGestureEnabled = (Boolean) __args__.get("tiltGestureEnabled");
        Double zoomLevel = (Double) __args__.get("zoomLevel");
        Double tilt = (Double) __args__.get("tilt");
        Double bearing = (Double) __args__.get("bearing");
        Double centerCoordinateLatitude = (Double) __args__.get("centerCoordinateLatitude");
        Double centerCoordinateLongitude = (Double) __args__.get("centerCoordinateLongitude");

        AMapOptions options = new AMapOptions();

        if (mapType != null) options.mapType(mapType + 1);
        if (showZoomControl != null) options.zoomControlsEnabled(showZoomControl);
        if (showCompass != null) options.compassEnabled(showCompass);
        if (showScaleControl != null) options.scaleControlsEnabled(showScaleControl);
        if (zoomGesturesEnabled != null) options.zoomGesturesEnabled(zoomGesturesEnabled);
        if (scrollGesturesEnabled != null) options.scrollGesturesEnabled(scrollGesturesEnabled);
        if (rotateGestureEnabled != null) options.rotateGesturesEnabled(rotateGestureEnabled);
        if (tiltGestureEnabled != null) options.tiltGesturesEnabled(tiltGestureEnabled);
        CameraPosition.Builder builder = CameraPosition
                .builder()
                .bearing(bearing == null ? 0 : bearing.floatValue())
                .tilt(tilt == null ? 0 : tilt.floatValue())
                .zoom(zoomLevel == null ? 0 : zoomLevel.floatValue());
        if (centerCoordinateLatitude != null && centerCoordinateLongitude != null) {
            builder.target(new LatLng(centerCoordinateLatitude, centerCoordinateLongitude));
        }
        options.camera(builder.build());
        ////////////////////////////////初始化AndroidView////////////////////////////////////////

        com.amap.api.maps.TextureMapView view = new com.amap.api.maps.TextureMapView(activity, options);

        // 同时存放viewId和refId的对象, 供后续viewId转refId使用
        getHEAP().put(String.valueOf(Integer.MAX_VALUE - id), view);
        getHEAP().put(String.valueOf(System.identityHashCode(view)), view);
        return new PlatformView() {

            // add to HEAP
            @Override
            public View getView() {
                return view;
            }

            @Override
            public void dispose() {}
        };
    }
}

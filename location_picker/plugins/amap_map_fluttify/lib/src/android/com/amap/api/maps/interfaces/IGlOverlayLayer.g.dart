// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:amap_map_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';



mixin com_amap_api_maps_interfaces_IGlOverlayLayer on java_lang_Object {
  

  

  @override
  final String tag__ = 'amap_map_fluttify';

  

  

  @mustCallSuper
  Future<void> updateOption(String var1, com_amap_api_maps_model_BaseOptions var2) {}
  
  @mustCallSuper
  Future<bool> removeOverlay__String(String var1) {}
  
  @mustCallSuper
  Future<void> prepareIcon(String var1, Object var2) {}
  
  @mustCallSuper
  Future<int> getCurrentParticleNum(String var1) {}
  
  @mustCallSuper
  Future<void> loadBitmapDescription(android_content_Context var1) {}
  
  @mustCallSuper
  Future<com_amap_api_maps_model_BaseOverlay> addOverlayObject(String var1, com_amap_api_maps_model_BaseOverlay var2, com_amap_api_maps_model_BaseOptions var3) {}
  
  @mustCallSuper
  Future<com_amap_api_maps_model_LatLng> getNearestLatLng(com_amap_api_maps_model_PolylineOptions var1, com_amap_api_maps_model_LatLng var2) {}
  
  @mustCallSuper
  Future<bool> IsPolygonContainsPoint(com_amap_api_maps_model_PolygonOptions var1, com_amap_api_maps_model_LatLng var2) {}
  
  @mustCallSuper
  Future<void> processPolygonHoleOption(com_amap_api_maps_model_PolygonOptions var1) {}
  
  @mustCallSuper
  Future<bool> IsCircleContainPoint(com_amap_api_maps_model_CircleOptions var1, com_amap_api_maps_model_LatLng var2) {}
  
  @mustCallSuper
  Future<void> processCircleHoleOption(com_amap_api_maps_model_CircleOptions var1) {}
  
  @mustCallSuper
  Future<void> draw(bool var1, int var2) {}
  
  @mustCallSuper
  Future<com_amap_api_maps_model_Polyline> getHitOverlay(com_amap_api_maps_model_LatLng var1) {}
  
  @mustCallSuper
  Future<String> createId(String var1) {}
  
  @mustCallSuper
  Future<void> onCreateAMapInstance() {}
  
  @mustCallSuper
  Future<Float64List> getFinalMatrix() {}
  
  @mustCallSuper
  Future<void> clear(String var1) {}
  
  @mustCallSuper
  Future<void> destroy() {}
  
  @mustCallSuper
  Future<void> changeOverlayIndex() {}
  
  @mustCallSuper
  Future<void> setRunLowFrame(bool var1) {}
  
  @mustCallSuper
  Future<bool> removeOverlay__String__bool(String var1, bool var2) {}
  
}

